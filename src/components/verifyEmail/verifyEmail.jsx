import { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useLocation } from 'react-router-dom';
import { verifyEmail } from '../../redux/auth/operations';
import {
  selectVerificationStatus,
  selectVerificationError,
} from '../../redux/auth/selectors';
import s from './VerifyEmail.module.css';

const VerifyEmail = () => {
  const location = useLocation();
  const dispatch = useDispatch();
  const verificationStatus = useSelector(selectVerificationStatus);
  const verificationError = useSelector(selectVerificationError);

  const searchParams = new URLSearchParams(location.search);
  const token = searchParams.get('token'); // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ URL

  useEffect(() => {
    if (token) {
      dispatch(verifyEmail(token)); // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–ø–µ—Ä–∞—Ü—ñ—é –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ email
    }
  }, [dispatch, token]);

  return (
    <div className={s.container}>
      {verificationStatus === 'loading' && <h1>–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó...</h1>}
      {verificationStatus === 'succeeded' && (
        <h1>–í–∞—à–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∞! üéâ</h1>
      )}
      {verificationStatus === 'failed' && (
        <h1>–ü–æ–º–∏–ª–∫–∞ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó: {verificationError || '–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!'}</h1>
      )}
    </div>
  );
};

export default VerifyEmail;
